--
-- PostgreSQL database dump
--

-- Dumped from database version 14.4
-- Dumped by pg_dump version 14.4

-- Started on 2022-10-02 16:19:01 BST

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- TOC entry 221 (class 1259 OID 32782)
-- Name: CUSTOMER_TRANSACTION; Type: TABLE; Schema: public; Owner: devang
--

CREATE TABLE IF NOT EXISTS public.customer_transaction (
    transactionid integer NOT NULL,
    useridshopper integer NOT NULL,
    useridshop integer NOT NULL,
    moneyspent numeric,
    pointsearned numeric,
    loyaltyschemeid integer,
    receiptid integer,
    collectedflag boolean,
    datetime timestamp without time zone
);



--
-- TOC entry 220 (class 1259 OID 24768)
-- Name: LOYALTY_SCHEME_MASTER; Type: TABLE; Schema: public; Owner: devang
--

CREATE TABLE IF NOT EXISTS public.loyalty_scheme_master (
    loyaltyschemetypeid integer NOT NULL,
    loyaltyschemeid integer NOT NULL,
    moneyforpoints numeric,
    pointsfrommoney numeric,
    pointstoredeem numeric,
    moneyfrompoints numeric,
    redeemfrequency text,
    predefined boolean NOT NULL,
    stampstocollect numeric,
    freeitems numeric,
    expiremonths integer,
    validfromdate date,
    loyaltyschemename text,
    expireflag boolean
);



--
-- TOC entry 225 (class 1259 OID 40981)
-- Name: LOYALTY_SCHEME_SHOP_MAPPING; Type: TABLE; Schema: public; Owner: devang
--

CREATE TABLE IF NOT EXISTS public.loyalty_scheme_shop_mapping (
    useridshop integer,
    loyaltyschemeid integer,
    mapid integer NOT NULL
);



--
-- TOC entry 219 (class 1259 OID 24760)
-- Name: LOYALTY_SCHEME_TYPE; Type: TABLE; Schema: public; Owner: devang
--

CREATE TABLE IF NOT EXISTS public.loyalty_scheme_type (
    loyaltyschemetypeid integer NOT NULL,
    description text
);



--
-- TOC entry 218 (class 1259 OID 24744)
-- Name: OFFER_AVAILED; Type: TABLE; Schema: public; Owner: devang
--

CREATE TABLE IF NOT EXISTS public.offer_availed (
    userid integer NOT NULL,
    mapid integer NOT NULL,
    datetime time without time zone
);



--
-- TOC entry 222 (class 1259 OID 32789)
-- Name: STAMPS; Type: TABLE; Schema: public; Owner: devang
--

CREATE TABLE IF NOT EXISTS public.stamps (
    transactionid integer NOT NULL,
    useridshopper integer NOT NULL,
    useridshop integer NOT NULL,
    redeemflag boolean,
    stampsBought integer,
    loyaltyschemeid integer,
    datetime timestamp without time zone
);



--
-- TOC entry 223 (class 1259 OID 32794)
-- Name: STAMPS_MASTER; Type: TABLE; Schema: public; Owner: devang
--

-- CREATE TABLE IF NOT EXISTS public."stamps_master" (
--     "userIDShop" integer NOT NULL,
--     item text,
--     "stampNumber" integer,
--     "freeItems" integer,
--     "expireFlag" boolean,
--     "expireMonths" integer
-- );



--
-- TOC entry 224 (class 1259 OID 40960)
-- Name: USER_LOG; Type: TABLE; Schema: public; Owner: devang
--

CREATE TABLE IF NOT EXISTS public.user_log (
    useridshop integer NOT NULL,
    useridshopper integer NOT NULL,
    datetime date,
    id integer NOT NULL
);



--
-- TOC entry 217 (class 1259 OID 24737)
-- Name: user_offer_mapping; Type: TABLE; Schema: public; Owner: devang
--

CREATE TABLE IF NOT EXISTS public.user_offer_mapping (
    mapid integer NOT NULL,
    userid integer,
    offerid integer,
    virtualobjcoord text
);



--
-- TOC entry 229 (class 1259 OID 49163)
-- Name: USER_OFFER_MAPPING_mapID_seq; Type: SEQUENCE; Schema: public; Owner: devang
--

ALTER TABLE public.user_offer_mapping ALTER COLUMN mapid ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.USER_OFFER_MAPPING_mapID_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE public.loyalty_scheme_shop_mapping ALTER COLUMN mapid ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.LOYALTY_SCHEME_SHOP_MAPPING_mapid_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- TOC entry 214 (class 1259 OID 24621)
-- Name: offer_master; Type: TABLE; Schema: public; Owner: devang
--

CREATE TABLE IF NOT EXISTS public.offer_master (
    offertypeid integer NOT NULL,
    offerid integer NOT NULL,
    description text,
    buyitem integer,
    freeitem integer,
    percentagediscount numeric,
    cashdiscount numeric,
    minspend numeric,
    buyproductid integer,
    offerpicture text,
    validity date,
    numberoffers integer,
    firstserveflag boolean,
    virtualflag boolean,
    validflag boolean,
    sellproductid integer
);



--
-- TOC entry 231 (class 1259 OID 49165)
-- Name: offer_master_offerid_seq; Type: SEQUENCE; Schema: public; Owner: devang
--

ALTER TABLE public.offer_master ALTER COLUMN offerid ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.offer_master_offerid_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE public.loyalty_scheme_master ALTER COLUMN loyaltyschemeid ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.loyalty_scheme_master_loyaltyschemeid_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- TOC entry 215 (class 1259 OID 24697)
-- Name: offer_type; Type: TABLE; Schema: public; Owner: devang
--

CREATE TABLE IF NOT EXISTS public.offer_type (
    offertypeid integer NOT NULL,
    description text
);



--
-- TOC entry 228 (class 1259 OID 49162)
-- Name: offer_type_offertypeid_seq; Type: SEQUENCE; Schema: public; Owner: devang
--

ALTER TABLE public.offer_type ALTER COLUMN offertypeid ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.offer_type_offertypeid_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- TOC entry 216 (class 1259 OID 24728)
-- Name: product_master; Type: TABLE; Schema: public; Owner: devang
--

CREATE TABLE IF NOT EXISTS public.product_master (
    productid integer NOT NULL,
    productdescription text,
    productpicture text
);



--
-- TOC entry 230 (class 1259 OID 49164)
-- Name: product_master_productid_seq; Type: SEQUENCE; Schema: public; Owner: devang
--

ALTER TABLE public.product_master ALTER COLUMN productid ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.product_master_productid_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- TOC entry 213 (class 1259 OID 24607)
-- Name: shop_type; Type: TABLE; Schema: public; Owner: devang
--

CREATE TABLE IF NOT EXISTS public.shop_type (
    shoptypeid integer NOT NULL,
    description text
);



--
-- TOC entry 211 (class 1259 OID 24585)
-- Name: user_master; Type: TABLE; Schema: public; Owner: devang
--

CREATE TABLE IF NOT EXISTS public.user_master (
    userid integer NOT NULL,
    fullname text,
    mobilenumber text,
    isvalidated boolean,
    isenabled boolean,
    businessname text,
    dpname text,
    businesslogo text,
    otp text,
    appleauthtkn text,
    "appleAuthTknSecret" text,
    "appleAuthTknUserID" text,
    "appleAuthTknUserName" text,
    "googleAuthTkn" text,
    "googleAuthTknSecret" text,
    "googleAuthTknUserID" text,
    "googleAuthTknUserName" text,
    "loggedInWith" text,
    postcode text,
    address1 text,
    address2 text,
    city text,
    "ageGroup" text,
    gender text,
    "appVersion" text,
    "lastActivity" text,
    "createdOn" text,
    "currentSchemeID" integer,
    "currentSchemeName" text,
    "currentSchemeAmount" text,
    "currentSchemePurchaseDate" date,
    "currentSchemeValidityDate" date,
    "userRating" text,
    "pushNotificationToken" text,
    "mobileDevice" text,
    "secureToken" text,
    "thanosID" integer,
    "thanosPassword" text,
    "isAdmin" boolean,
    shoptypeid integer,
    cashiertills integer,
    paiduser boolean,
    usertype text,
    interests text,
    baselatitude numeric,
    baselongitude numeric
);



--
-- TOC entry 226 (class 1259 OID 40996)
-- Name: user_master_userid_seq; Type: SEQUENCE; Schema: public; Owner: devang
--

ALTER TABLE public.user_master ALTER COLUMN userid ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.user_master_userid_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- TOC entry 212 (class 1259 OID 24593)
-- Name: user_type; Type: TABLE; Schema: public; Owner: devang
--

CREATE TABLE IF NOT EXISTS public.user_type (
    usertypeid integer NOT NULL,
    description text NOT NULL
);



--
-- TOC entry 227 (class 1259 OID 40997)
-- Name: user_type_usertypeid_seq; Type: SEQUENCE; Schema: public; Owner: devang
--

ALTER TABLE public.user_type ALTER COLUMN usertypeid ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.user_type_usertypeid_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- TOC entry 210 (class 1259 OID 24579)
-- Name: users; Type: TABLE; Schema: public; Owner: devang
--

CREATE TABLE IF NOT EXISTS public.users (
    id integer NOT NULL,
    otp bigint,
    createdat character varying(30),
    updatedat character varying(30),
    email character varying(30),
    isvalidated boolean,
    isenabled boolean,
    mobilenumber character varying(30)
);


--
-- TOC entry 209 (class 1259 OID 24578)
-- Name: users_userid_seq; Type: SEQUENCE; Schema: public; Owner: devang
--

CREATE SEQUENCE IF NOT EXISTS public.users_userid_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;



--
-- TOC entry 3686 (class 0 OID 0)
-- Dependencies: 209
-- Name: users_userid_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: devang
--

ALTER SEQUENCE public.users_userid_seq OWNED BY public.users.id;


--
-- TOC entry 3498 (class 2604 OID 24582)
-- Name: users id; Type: DEFAULT; Schema: public; Owner: devang
--

ALTER TABLE ONLY public.users ALTER COLUMN id SET DEFAULT nextval('public.users_userid_seq'::regclass);


--
-- TOC entry 3522 (class 2606 OID 32788)
-- Name: CUSTOMER_TRANSACTION CUSTOMER_TRANSACTION_pkey; Type: CONSTRAINT; Schema: public; Owner: devang
--

ALTER TABLE ONLY public.customer_transaction
    ADD CONSTRAINT "CUSTOMER_TRANSACTION_pkey" PRIMARY KEY (transactionID);


--
-- TOC entry 3520 (class 2606 OID 40968)
-- Name: LOYALTY_SCHEME_MASTER LOYALTY_SCHEME_MASTER_pk; Type: CONSTRAINT; Schema: public; Owner: devang
--

ALTER TABLE ONLY public.loyalty_scheme_master
    ADD CONSTRAINT "LOYALTY_SCHEME_MASTER_pk" PRIMARY KEY (loyaltyschemeid);


--
-- TOC entry 3530 (class 2606 OID 40985)
-- Name: LOYALTY_SCHEME_SHOP_MAPPING LOYALTY_SCHEME_SHOP_MAPPING_pkey; Type: CONSTRAINT; Schema: public; Owner: devang
--

ALTER TABLE ONLY public.loyalty_scheme_shop_mapping
    ADD CONSTRAINT "LOYALTY_SCHEME_SHOP_MAPPING_pkey" PRIMARY KEY (mapid);


--
-- TOC entry 3518 (class 2606 OID 24766)
-- Name: LOYALTY_SCHEME_TYPE LOYALTY_SCHEME_TYPE_pkey; Type: CONSTRAINT; Schema: public; Owner: devang
--

ALTER TABLE ONLY public.loyalty_scheme_type
    ADD CONSTRAINT "LOYALTY_SCHEME_TYPE_pkey" PRIMARY KEY (loyaltyschemetypeid);


--
-- TOC entry 3510 (class 2606 OID 24703)
-- Name: offer_type OFFER_TYPE_pkey; Type: CONSTRAINT; Schema: public; Owner: devang
--

ALTER TABLE ONLY public.offer_type
    ADD CONSTRAINT "OFFER_TYPE_pkey" PRIMARY KEY (offertypeid);


--
-- TOC entry 3512 (class 2606 OID 24734)
-- Name: product_master PRODUCTMASTER_pkey; Type: CONSTRAINT; Schema: public; Owner: devang
--

ALTER TABLE ONLY public.product_master
    ADD CONSTRAINT "PRODUCTMASTER_pkey" PRIMARY KEY (productid);


--
-- TOC entry 3526 (class 2606 OID 32800)
-- Name: STAMPS_MASTER STAMPS_MASTER_pkey; Type: CONSTRAINT; Schema: public; Owner: devang
--

-- ALTER TABLE ONLY public."stamps_master"
--     ADD CONSTRAINT "STAMPS_MASTER_pkey" PRIMARY KEY ("userIDShop");


--
-- TOC entry 3524 (class 2606 OID 32793)
-- Name: STAMPS STAMPS_pkey; Type: CONSTRAINT; Schema: public; Owner: devang
--

ALTER TABLE ONLY public.stamps
    ADD CONSTRAINT "STAMPS_pkey" PRIMARY KEY (transactionid);


--
-- TOC entry 3528 (class 2606 OID 40966)
-- Name: USER_LOG USER_LOG_pkey; Type: CONSTRAINT; Schema: public; Owner: devang
--

ALTER TABLE ONLY public.user_log
    ADD CONSTRAINT "USER_LOG_pkey" PRIMARY KEY (id);


--
-- TOC entry 3502 (class 2606 OID 24591)
-- Name: user_master USER_MASTER_pkey; Type: CONSTRAINT; Schema: public; Owner: devang
--

ALTER TABLE ONLY public.user_master
    ADD CONSTRAINT "USER_MASTER_pkey" PRIMARY KEY (userid);


--
-- TOC entry 3514 (class 2606 OID 24743)
-- Name: user_offer_mapping USER_OFFER_MAPPING_pkey; Type: CONSTRAINT; Schema: public; Owner: devang
--

ALTER TABLE ONLY public.user_offer_mapping
    ADD CONSTRAINT "USER_OFFER_MAPPING_pkey" PRIMARY KEY (mapid);


--
-- TOC entry 3504 (class 2606 OID 24710)
-- Name: user_type USER_TYPE_pk; Type: CONSTRAINT; Schema: public; Owner: devang
--

ALTER TABLE ONLY public.user_type
    ADD CONSTRAINT "USER_TYPE_pk" PRIMARY KEY (usertypeid);


--
-- TOC entry 3516 (class 2606 OID 24748)
-- Name: OFFER_AVAILED offerAvailed_pkey; Type: CONSTRAINT; Schema: public; Owner: devang
--

ALTER TABLE ONLY public.offer_availed
    ADD CONSTRAINT "offerAvailed_pkey" PRIMARY KEY (userid, mapid);


--
-- TOC entry 3508 (class 2606 OID 40970)
-- Name: offer_master offer_master_pk; Type: CONSTRAINT; Schema: public; Owner: devang
--

ALTER TABLE ONLY public.offer_master
    ADD CONSTRAINT offer_master_pk PRIMARY KEY (offerid);


--
-- TOC entry 3506 (class 2606 OID 24717)
-- Name: shop_type shop_type_pk; Type: CONSTRAINT; Schema: public; Owner: devang
--

ALTER TABLE ONLY public.shop_type
    ADD CONSTRAINT shop_type_pk PRIMARY KEY (shoptypeid);


--
-- TOC entry 3500 (class 2606 OID 24584)
-- Name: users users_pkey; Type: CONSTRAINT; Schema: public; Owner: devang
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT users_pkey PRIMARY KEY (id);


--
-- TOC entry 3540 (class 2606 OID 40986)
-- Name: LOYALTY_SCHEME_SHOP_MAPPING loyaltySchemeID_fk; Type: FK CONSTRAINT; Schema: public; Owner: devang
--

ALTER TABLE ONLY public.loyalty_scheme_shop_mapping
    ADD CONSTRAINT "loyaltySchemeID_fk" FOREIGN KEY (loyaltyschemeid) REFERENCES public.loyalty_scheme_master(loyaltyschemeid) NOT VALID;


--
-- TOC entry 3538 (class 2606 OID 24775)
-- Name: LOYALTY_SCHEME_MASTER loyaltySchemeMaster_loyaltySchemeType_fk; Type: FK CONSTRAINT; Schema: public; Owner: devang
--

ALTER TABLE ONLY public.loyalty_scheme_master
    ADD CONSTRAINT "loyaltySchemeMaster_loyaltySchemeType_fk" FOREIGN KEY (loyaltyschemetypeid) REFERENCES public.loyalty_scheme_type(loyaltyschemetypeid);


--
-- TOC entry 3537 (class 2606 OID 24749)
-- Name: OFFER_AVAILED offerAvailed_userOfferMapping_fk; Type: FK CONSTRAINT; Schema: public; Owner: devang
--

ALTER TABLE ONLY public.offer_availed
    ADD CONSTRAINT "offerAvailed_userOfferMapping_fk" FOREIGN KEY (mapid) REFERENCES public.user_offer_mapping(mapid);


--
-- TOC entry 3535 (class 2606 OID 49152)
-- Name: user_offer_mapping offerID_fk; Type: FK CONSTRAINT; Schema: public; Owner: devang
--

ALTER TABLE ONLY public.user_offer_mapping
    ADD CONSTRAINT "offerID_fk" FOREIGN KEY (offerid) REFERENCES public.offer_master(offerid) NOT VALID;


--
-- TOC entry 3533 (class 2606 OID 40971)
-- Name: offer_master offerMaster_buyproductid_fk; Type: FK CONSTRAINT; Schema: public; Owner: devang
--

ALTER TABLE ONLY public.offer_master
    ADD CONSTRAINT "offerMaster_buyproductid_fk" FOREIGN KEY (buyproductid) REFERENCES public.product_master(productid) NOT VALID;


--
-- TOC entry 3532 (class 2606 OID 24723)
-- Name: offer_master offerMaster_offerType_fk; Type: FK CONSTRAINT; Schema: public; Owner: devang
--

ALTER TABLE ONLY public.offer_master
    ADD CONSTRAINT "offerMaster_offerType_fk" FOREIGN KEY (offertypeid) REFERENCES public.offer_type(offertypeid) NOT VALID;


--
-- TOC entry 3534 (class 2606 OID 40976)
-- Name: offer_master offerMaster_sellproductid_fk; Type: FK CONSTRAINT; Schema: public; Owner: devang
--

ALTER TABLE ONLY public.offer_master
    ADD CONSTRAINT "offerMaster_sellproductid_fk" FOREIGN KEY (sellproductid) REFERENCES public.product_master(productid) NOT VALID;


--
-- TOC entry 3539 (class 2606 OID 32801)
-- Name: STAMPS stamps_stampsMaster_fk; Type: FK CONSTRAINT; Schema: public; Owner: devang
--



ALTER TABLE ONLY public.stamps
    ADD CONSTRAINT "stamps_userIDShop_fk" FOREIGN KEY (useridshop) REFERENCES public.user_master(userid) NOT VALID;

ALTER TABLE ONLY public.stamps
    ADD CONSTRAINT "stamps_userIDShopper_fk" FOREIGN KEY (useridshopper) REFERENCES public.user_master(userid) NOT VALID;

ALTER TABLE ONLY public.stamps
    ADD CONSTRAINT "stamps_loyaltySchemeID_fk" FOREIGN KEY (loyaltyschemeid) REFERENCES public.loyalty_scheme_master(loyaltyschemeid) NOT VALID;



ALTER TABLE ONLY public.customer_transaction
    ADD CONSTRAINT "customer_transaction_userIDShop_fk" FOREIGN KEY (useridshop) REFERENCES public.user_master(userid) NOT VALID;

ALTER TABLE ONLY public.customer_transaction
    ADD CONSTRAINT "customer_transaction_userIDShopper_fk" FOREIGN KEY (useridshopper) REFERENCES public.user_master(userid) NOT VALID;

ALTER TABLE ONLY public.customer_transaction
    ADD CONSTRAINT "customer_transaction_loyaltySchemeID_fk" FOREIGN KEY (loyaltyschemeid) REFERENCES public.loyalty_scheme_master(loyaltyschemeid) NOT VALID;



--
-- TOC entry 3541 (class 2606 OID 40991)
-- Name: LOYALTY_SCHEME_SHOP_MAPPING userIDShop_fk; Type: FK CONSTRAINT; Schema: public; Owner: devang
--

ALTER TABLE ONLY public.loyalty_scheme_shop_mapping
    ADD CONSTRAINT "userIDShop_fk" FOREIGN KEY (useridshop) REFERENCES public.user_master(userid) NOT VALID;


--
-- TOC entry 3536 (class 2606 OID 49157)
-- Name: user_offer_mapping userID_fk; Type: FK CONSTRAINT; Schema: public; Owner: devang
--

ALTER TABLE ONLY public.user_offer_mapping
    ADD CONSTRAINT "userID_fk" FOREIGN KEY (userid) REFERENCES public.user_master(userid) NOT VALID;


--
-- TOC entry 3531 (class 2606 OID 24718)
-- Name: user_master userMaster_shopType_fk; Type: FK CONSTRAINT; Schema: public; Owner: devang
--

ALTER TABLE ONLY public.user_master
    ADD CONSTRAINT "userMaster_shopType_fk" FOREIGN KEY (shoptypeid) REFERENCES public.shop_type(shoptypeid) NOT VALID;


-- Completed on 2022-10-02 16:19:02 BST

--
-- PostgreSQL database dump complete
--
INSERT INTO public.user_type (description) VALUES ('M');

INSERT INTO public.user_type (description) VALUES ('S');

ALTER TABLE public.shop_type ALTER COLUMN shoptypeid ADD GENERATED BY DEFAULT AS IDENTITY (
	SEQUENCE NAME public.shop_type_shoptypeid_seq 
	START WITH 1
	INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


INSERT INTO public.shop_type (description) VALUES ('Bar');

INSERT INTO public.shop_type (description) VALUES ('Cafe');

INSERT INTO public.shop_type (description) VALUES ('Cake Shop');

INSERT INTO public.shop_type (description) VALUES ('Grocery');

INSERT INTO public.shop_type (description) VALUES ('Hair Salon');

INSERT INTO public.shop_type (description) VALUES ('Nails');

INSERT INTO public.shop_type (description) VALUES ('Parlour');

INSERT INTO public.shop_type (description) VALUES ('Newsagent');

INSERT INTO public.shop_type (description) VALUES ('Flowerist');

INSERT INTO public.shop_type (description) VALUES ('Stationery');

INSERT INTO public.shop_type (description) VALUES ('Restaurant');

INSERT INTO public.shop_type (description) VALUES ('Wine Shop');

create table IF NOT EXISTS public.validpostcodes (
id integer not null,
postcode character varying (30),
latlong character varying (100),
county character varying (100),
district character varying (100),
ward character varying (100),
country character varying (100),
postcodearea character varying (5),
postcodedistrict character varying (10));


CREATE SEQUENCE IF NOT EXISTS public.postcodesid_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.postcodesid_seq OWNED BY public.validpostcodes.id;

ALTER TABLE ONLY public.validpostcodes ALTER COLUMN id SET DEFAULT nextval('public.postcodesid_seq'::regclass);


ALTER TABLE ONLY public.validpostcodes
    ADD CONSTRAINT postcodesid_pk PRIMARY KEY (id);
    
    
  CREATE TABLE IF NOT EXISTS public.questiontype (
questiontypeid integer PRIMARY KEY,
questiontypedesc text NOT NULL
);

ALTER TABLE public.questiontype ALTER COLUMN questiontypeid ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.questiontype_questiontypeid_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS public.questions (
questionid integer PRIMARY KEY,
questiontext text NOT NULL,
questiontypeid integer
);

ALTER TABLE public.questions ALTER COLUMN questionid ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.questions_questionid_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE ONLY public.questions
    ADD CONSTRAINT "fk_QuestionType" FOREIGN KEY(questiontypeid) REFERENCES public.questiontype(questiontypeid) NOT VALID;
    
    
CREATE TABLE IF NOT EXISTS public.options (
optionid integer PRIMARY KEY,
optiontext text NOT NULL,
questionid INT,
CONSTRAINT "fk_questionID" FOREIGN KEY(questionid) REFERENCES public.questions(questionid)
); 


ALTER TABLE public.options ALTER COLUMN optionid ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.options_optionid_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);   
    
    
CREATE TABLE IF NOT EXISTS public.user_options (
optionid integer,
userid integer,
questionid INTEGER,
optiontext text,
PRIMARY KEY(userid, questionid, optionid)
); 
   
    
    
ALTER TABLE ONLY public.questiontype Add column questiontype text;
 
   
 INSERT INTO public.questiontype (questiontype, questiontypedesc) VALUES ('R', 'Multiple Choice');
 INSERT INTO public.questiontype (questiontype, questiontypedesc) VALUES ('C', 'Multiple Options');

INSERT INTO public.questions (questiontypeid, questiontext) VALUES ('1', 'Are you a?');
    
INSERT INTO public.questions (questiontypeid, questiontext) VALUES ('1', 'How many franchises do you have?');

INSERT INTO public.options (questionid, optiontext) VALUES ('1', 'Highstreet Shop');

INSERT INTO public.options (questionid, optiontext) VALUES ('1', 'Corner Shop');

INSERT INTO public.options (questionid, optiontext) VALUES ('1', 'Shop in a Shopping Mall');
  
INSERT INTO public.options (questionid, optiontext) VALUES ('1', 'Shop at the Retail Park');

INSERT INTO public.options (questionid, optiontext) VALUES ('2', 'None');

INSERT INTO public.options (questionid, optiontext) VALUES ('2', '1');
INSERT INTO public.options (questionid, optiontext) VALUES ('2', '2');
INSERT INTO public.options (questionid, optiontext) VALUES ('2', '3');
INSERT INTO public.options (questionid, optiontext) VALUES ('2', '4');
INSERT INTO public.options (questionid, optiontext) VALUES ('2', '5');
INSERT INTO public.options (questionid, optiontext) VALUES ('2', 'More than 5');


-- alter table public."LOYALTY_SCHEME_SHOP_MAPPING" rename to public."loyalty_scheme_shop_mapping";
-- alter table public."LOYALTY_SCHEME_MASTER" rename to public."loyalty_scheme_master"; 

-- alter table public."LOYALTY_SCHEME_TYPE" rename to public."loyalty_scheme_type";	

-- alter table public."CUSTOMER_TRANSACTION" rename to public."customer_transaction";

-- alter table public."OFFER_AVAILED" rename to public."offer_availed";

-- alter table public."STAMPS" rename to public."stamps";

-- alter table public."STAMPS_MASTER" rename to public."stamps_master";

-- alter table public."USER_LOG" rename to public."user_log";

INSERT INTO public.offer_type (description) VALUES ('Buy One Get One');
INSERT INTO public.offer_type (description) VALUES ('Percentage Discount');
INSERT INTO public.offer_type (description) VALUES ('Cash Discount');
INSERT INTO public.offer_type (description) VALUES ('Minimum Spend');
INSERT INTO public.offer_type (description) VALUES ('Multi Buy');
INSERT INTO public.offer_type (description) VALUES ('Flash Sales');

ALTER TABLE public.loyalty_scheme_type ALTER COLUMN loyaltyschemetypeid ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.loyal_scheme_type_loyaltyschemetypeid_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

INSERT INTO public.loyalty_scheme_type (description) VALUES ('Cashback');
INSERT INTO public.loyalty_scheme_type (description) VALUES ('Vouchers');
INSERT INTO public.loyalty_scheme_type (description) VALUES ('Stamps');

CREATE TABLE IF NOT EXISTS public.parameters (
    paramid integer NOT NULL, 
    parameter text, 
    paramkey text, 
    paramvalue text);


ALTER TABLE public.parameters ALTER COLUMN paramid ADD GENERATED BY DEFAULT AS IDENTITY (SEQUENCE NAME public.parameter_paramid_seq START WITH 1 INCREMENT BY 1 NO MINVALUE NO  MAXVALUE CACHE 1);


CREATE TABLE IF NOT EXISTS public.customer_consolidation (
    useridshopper integer NOT NULL,
    useridshop integer NOT NULL,
    loyaltyschemeid integer NOT NULL,
    pointscollected integer NOT NULL
);

ALTER TABLE ONLY public.customer_consolidation
    ADD CONSTRAINT "customer_consolidation_pk" PRIMARY KEY (useridshopper, useridshop, loyaltyschemeid);

ALTER TABLE ONLY public.customer_consolidation
    ADD CONSTRAINT "customer_consolidation_useridshop_fk" FOREIGN KEY (useridshop) REFERENCES public.user_master(userid) NOT VALID;

ALTER TABLE ONLY public.customer_consolidation
    ADD CONSTRAINT "customer_consolidation_useridshopper_fk" FOREIGN KEY (useridshopper) REFERENCES public.user_master(userid) NOT VALID;

ALTER TABLE ONLY public.customer_consolidation
    ADD CONSTRAINT "customer_consolidation_loyaltyschemeid_fk" FOREIGN KEY (loyaltyschemeid) REFERENCES public.loyalty_scheme_master(loyaltyschemeid) NOT VALID;



CREATE TABLE IF NOT EXISTS public.customer_redeem (
    useridshopper integer NOT NULL,
    useridshop integer NOT NULL,
    redeemablepoints integer NOT NULL
);
ALTER TABLE ONLY public.customer_redeem
    ADD CONSTRAINT "customer_redeem_pk" PRIMARY KEY (useridshopper, useridshop);

ALTER TABLE ONLY public.customer_consolidation
    ADD CONSTRAINT "customer_redeem_useridshop_fk" FOREIGN KEY (useridshop) REFERENCES public.user_master(userid) NOT VALID;

ALTER TABLE ONLY public.customer_consolidation
    ADD CONSTRAINT "customer_redeem_useridshopper_fk" FOREIGN KEY (useridshopper) REFERENCES public.user_master(userid) NOT VALID;




-- INSERT INTO parameters (parameter, paramkey, paramvalue)  VALUES ('redeem_frequency', 'w', 'weekly');
INSERT INTO public.parameters (parameter, paramkey, paramvalue)  VALUES ('Redeem Frequency', 'm', 'monthly');
INSERT INTO public.parameters (parameter, paramkey, paramvalue)  VALUES ('Redeem Frequency', 'q', 'quarterly');
INSERT INTO public.parameters (parameter, paramkey, paramvalue)  VALUES ('Redeem Frequency', 'y', 'yearly');
INSERT INTO public.parameters (parameter, paramkey, paramvalue)  VALUES ('Redeem Frequency', 'a', 'any time');

INSERT INTO public.parameters (parameter, paramkey, paramvalue) VALUES ('Points Conversion', '£ spent', 'Amount Spent');
INSERT INTO public.parameters (parameter, paramkey, paramvalue) VALUES ('Points Conversion', 'Pts Col', 'Points Collected');
INSERT INTO public.parameters (parameter, paramkey, paramvalue) VALUES ('Points Conversion', 'Pts spent', 'Points Spent');
INSERT INTO public.parameters (parameter, paramkey, paramvalue) VALUES ('Points Conversion', '£ Col', 'Amount Collected');


INSERT INTO public.parameters (parameter, paramkey, paramvalue) VALUES ('Stamps Conversion', 'Stmp Col', 'Stamps Collected');
INSERT INTO public.parameters (parameter, paramkey, paramvalue) VALUES ('Stamps Conversion', 'Free', 'Items Free');


INSERT INTO public.loyalty_scheme_master (loyaltySchemeTypeID, moneyForPoints , pointsFromMoney , pointsToRedeem , moneyFromPoints , redeemFrequency , preDefined , expireMonths , validFromDate , loyaltySchemeName , expireflag) VALUES (1, 1, 1, 10, 1, 'monthly', true, 36, '2023-10-01', 'Ten Points One Monthly', false);
INSERT INTO public.loyalty_scheme_master (loyaltySchemeTypeID, moneyForPoints , pointsFromMoney , pointsToRedeem , moneyFromPoints , redeemFrequency , preDefined , expireMonths , validFromDate , loyaltySchemeName , expireflag) VALUES (1, 1, 1, 10, 1, 'quarterly', true, 36, '2023-10-01', 'Ten Points One Quarterly', false);
INSERT INTO public.loyalty_scheme_master (loyaltySchemeTypeID, moneyForPoints , pointsFromMoney , pointsToRedeem , moneyFromPoints , redeemFrequency , preDefined , expireMonths , validFromDate , loyaltySchemeName , expireflag) VALUES (1, 1, 1, 10, 1, 'yearly', true, 36, '2023-10-01', 'Ten Points One Yearly', false);
INSERT INTO public.loyalty_scheme_master (loyaltySchemeTypeID, moneyForPoints , pointsFromMoney , pointsToRedeem , moneyFromPoints , redeemFrequency , preDefined , expireMonths , validFromDate , loyaltySchemeName , expireflag) VALUES (1, 1, 1, 10, 1, 'any time', true, 36, '2023-10-01', 'Ten Points One Any Time', false);

INSERT INTO public.loyalty_scheme_master (loyaltySchemeTypeID, moneyForPoints , pointsFromMoney , pointsToRedeem , moneyFromPoints , redeemFrequency , preDefined , expireMonths , validFromDate , loyaltySchemeName , expireflag) VALUES (1, 1, 1, 50, 1, 'monthly', true, 36, '2023-10-01', 'Fifty Points One Monthly', false);
INSERT INTO public.loyalty_scheme_master (loyaltySchemeTypeID, moneyForPoints , pointsFromMoney , pointsToRedeem , moneyFromPoints , redeemFrequency , preDefined , expireMonths , validFromDate , loyaltySchemeName , expireflag) VALUES (1, 1, 1, 50, 1, 'quarterly', true, 36, '2023-10-01', 'Fifty Points One Quarterly', false);
INSERT INTO public.loyalty_scheme_master (loyaltySchemeTypeID, moneyForPoints , pointsFromMoney , pointsToRedeem , moneyFromPoints , redeemFrequency , preDefined , expireMonths , validFromDate , loyaltySchemeName , expireflag) VALUES (1, 1, 1, 50, 1, 'yearly', true, 36, '2023-10-01', 'Fifty Points One Yearly', false);
INSERT INTO public.loyalty_scheme_master (loyaltySchemeTypeID, moneyForPoints , pointsFromMoney , pointsToRedeem , moneyFromPoints , redeemFrequency , preDefined , expireMonths , validFromDate , loyaltySchemeName , expireflag) VALUES (1, 1, 1, 50, 1, 'any time', true, 36, '2023-10-01', 'Fifty Points One Any Time', false);

INSERT INTO public.loyalty_scheme_master (loyaltySchemeTypeID, moneyForPoints , pointsFromMoney , pointsToRedeem , moneyFromPoints , redeemFrequency , preDefined , expireMonths , validFromDate , loyaltySchemeName , expireflag) VALUES (1, 1, 1, 100, 1, 'monthly', true, 36, '2023-10-01', 'Hundred Points One Monthly', false);
INSERT INTO public.loyalty_scheme_master (loyaltySchemeTypeID, moneyForPoints , pointsFromMoney , pointsToRedeem , moneyFromPoints , redeemFrequency , preDefined , expireMonths , validFromDate , loyaltySchemeName , expireflag) VALUES (1, 1, 1, 100, 1, 'quarterly', true, 36, '2023-10-01', 'Hundred Points One Quarterly', false);
INSERT INTO public.loyalty_scheme_master (loyaltySchemeTypeID, moneyForPoints , pointsFromMoney , pointsToRedeem , moneyFromPoints , redeemFrequency , preDefined , expireMonths , validFromDate , loyaltySchemeName , expireflag) VALUES (1, 1, 1, 100, 1, 'yearly', true, 36, '2023-10-01', 'Hundred Points One Yearly', false);
INSERT INTO public.loyalty_scheme_master (loyaltySchemeTypeID, moneyForPoints , pointsFromMoney , pointsToRedeem , moneyFromPoints , redeemFrequency , preDefined , expireMonths , validFromDate , loyaltySchemeName , expireflag) VALUES (1, 1, 1, 100, 1, 'any time', true, 36, '2023-10-01', 'Hundred Points One Any Time', false);


INSERT INTO public.loyalty_scheme_master (loyaltySchemeTypeID, preDefined, stampsToCollect , freeItems , validFromDate , loyaltySchemeName , expireflag) VALUES (3, true, 10, 1, '2023-10-01', 'Collect 10 Stamps', false);


INSERT INTO public.offer_master (offertypeid, description, buyitem, freeitem, validity, validflag, predefined) VALUES (1, 'Buy One Get One Free', 1, 1, '2023-10-01', true, true);
INSERT INTO public.offer_master (offertypeid, description, percentagediscount, validity, validflag, predefined) VALUES (2, '10% Off', 10, '2023-10-01', true, true);
INSERT INTO public.offer_master (offertypeid, description, cashdiscount, validity, validflag, predefined) VALUES (3, '£10 off', 10, '2023-10-01', true, true);
INSERT INTO public.offer_master (offertypeid, description, minspend, percentagediscount, validity, validflag, predefined) VALUES (4, 'Minimum Spend 25 Get 10% off', 25, 10, '2023-10-01', true, true);
INSERT INTO public.offer_master (offertypeid, description, minspend, cashdiscount, validity, validflag, predefined) VALUES (4, 'Minimum Spend 25 Get £5 off', 25, 5, '2023-10-01', true, true);
INSERT INTO public.offer_master (offertypeid, description, buyitem, freeitem, validity, validflag, predefined) VALUES (5, 'Buy 3 Get 1 Free', 3, 1, '2023-10-01', true, true);
INSERT INTO public.offer_master (offertypeid, description, buyitem, percentagediscount, validity, validflag, predefined) VALUES (5, 'Buy 4 Get 10% off', 4, 10, '2023-10-01', true, true);
INSERT INTO public.offer_master (offertypeid, description, buyitem, cashdiscount, validity, validflag, predefined) VALUES (5, 'Buy 5 Get £5 off', 5, 5, '2023-10-01', true, true);



CREATE TABLE IF NOT EXISTS public.loyalty_information (
    loyaltyschemeid integer PRIMARY KEY NOT NULL,
    useridshop integer,
    pointscollected numeric,
    numberofcustomers integer,
    pointsredeemed numeric,
    pointstoberedeemed numeric,
    stampstocollect integer,
    stampscollected integer,
    freeitemsgiven integer
);

ALTER TABLE ONLY public.loyalty_information
    ADD CONSTRAINT "loyaltySchemeID_loyalty_information_fk" FOREIGN KEY (loyaltyschemeid) REFERENCES public.loyalty_scheme_master(loyaltyschemeid) NOT VALID;

ALTER TABLE ONLY public.loyalty_information
    ADD CONSTRAINT "userID_loyalty_information_fk" FOREIGN KEY (useridshop) REFERENCES public.user_master(userid) NOT VALID;





-- select u.address1, u.mobilenumber, u.userid, u.postcode, o.* from user_master u inner join offer_master o on userid = 1 and offerid in (select offerid from user_offer_mapping where userid = 1); 




-- insert into loyalty_information (loyaltyschemeid, useridshop, pointscollected, numberofcustomers) values (10,1,3,1);
-- insert into loyalty_information (loyaltyschemeid, useridshop, pointscollected, numberofcustomers) values (15,1,4,1);
-- insert into loyalty_information (loyaltyschemeid, useridshop, pointscollected, numberofcustomers) values (16,2,2,2);



-- SELECT t.*, u.businessname, u.businesslogo, u.userid, count(o.userid) as offercount, round(cast(acos(
--         sin(radians('52.437711')) 
--           * sin(radians(baselatitude)) 
--         + cos(radians('52.437711')) 
--           * cos(radians(baselatitude)) 
--           * cos( radians('-1.844044')
--             - radians(baselongitude))
--         ) * 3963.1906 as numeric), 2) as distance
--  FROM user_master u LEFT JOIN user_offer_mapping o ON u.userid=o.userid INNER JOIN offer_master t ON t.offerid = o.offerid
--  WHERE acos(
--         sin(radians('52.437711')) 
--           * sin(radians(baselatitude)) 
--         + cos(radians('52.437711')) 
--           * cos(radians(baselatitude)) 
--           * cos( radians('-1.844044')
--             - radians(baselongitude))
--         ) * 3963.1906 >= 2 group by u.businessname, u.businesslogo, t.offertypeid, t.offerid, u.userid offset 0 limit 10 ;


-- SELECT u.businessname, u.businesslogo, u.userid, count(o.userid) as offercount, round(cast(acos(
--         sin(radians('52.437711')) 
--           * sin(radians(baselatitude)) 
--         + cos(radians('52.437711')) 
--           * cos(radians(baselatitude)) 
--           * cos( radians('-1.844044')
--             - radians(baselongitude))
--         ) * 3963.1906 as numeric), 2) as distance
--  FROM user_master u LEFT JOIN user_offer_mapping o ON u.userid=o.userid
--  WHERE acos(
--         sin(radians('52.437711')) 
--           * sin(radians(baselatitude)) 
--         + cos(radians('52.437711')) 
--           * cos(radians(baselatitude)) 
--           * cos( radians('-1.844044')
--             - radians(baselongitude))
--         ) * 3963.1906 >= 10 group by u.businessname, u.businesslogo, u.userid offset 0 limit 1 ;


